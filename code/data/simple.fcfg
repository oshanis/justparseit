S[sem = <(app (?actorP, ?actionP))>] -> ActorP[sem = ?actorP] Aux ActionP[sem = ?actionP]

ActorP[sem = <\F. (app (F, ?actor))>] -> Actor[sem = ?actor]
ActorP[sem = <\F. (all x. app(F, x))>] -> 'anyone' | 'one'
ActionP[sem = <\x. ((app(app (?action, x), ?actedOn)) implies ?purpose)>]  -> Action[sem = ?action] ActedOn[sem =?actedOn] Prop Purpose[sem =?purpose]
ActedOn[sem = <proxy>] -> 'proxy'
Action[sem = <\x y. (use x y)>] -> 'use'
Actor[sem = <MIT_committee>] -> 'MIT' 
Aux -> AuxPositive | AuxNegative
AuxPositive -> 'can' | 'may' 
AuxNegative -> 'cannot' | 'maynot' 
Prop -> 'for'
Purpose[sem = <criminal_investigaion>] -> 'criminal'
